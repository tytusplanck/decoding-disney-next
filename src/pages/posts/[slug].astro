---
import BaseLayout from '../../layouts/BaseLayout.astro'
import PostTitle from '../../components/PostTitle.astro'
import DateFormatter from '../../components/DateFormatter.astro'
import { getCollection, type CollectionEntry } from 'astro:content'
import { Image } from 'astro:assets'

export async function getStaticPaths() {
  const posts = await getCollection('posts')
  return posts.map((post) => ({ params: { slug: post.slug } }))
}

const { slug } = Astro.params
const allPosts = await getCollection('posts')
const entry = slug ? allPosts.find((post) => post.slug === slug) : undefined
if (!entry) {
  throw new Error('Post not found')
}

const { Content } = await entry.render()
const { data } = entry satisfies CollectionEntry<'posts'>
const pageTitle = `${data.title} | Decoding Disney`
const ogImage = Astro.site ? new URL(data.coverImage.src, Astro.site).toString() : data.coverImage.src
---
<BaseLayout
  title={pageTitle}
  description={data.excerpt}
  type="article"
  ogImage={ogImage}
  publishedTime={data.date.toISOString()}
>
  <main>
    <div class="container mx-auto px-5">
      <article class="mb-32">
        <div class="mb-8 md:mb-16 sm:mx-0 flex justify-center">
          <div class="h-[512px] w-[512px]">
            <Image src={data.coverImage} alt={`Cover Image for ${data.title}`} class="shadow-sm w-full" width={512} height={512} />
          </div>
        </div>
        <div class="flex justify-center">
          <PostTitle>{data.title}</PostTitle>
        </div>
        <div class="flex justify-center max-w-2xl mx-auto mb-6 text-lg">
          <DateFormatter date={data.date} />
        </div>
        <div class="max-w-2xl mx-auto markdown">
          <Content />
        </div>
      </article>
    </div>
  </main>
  <script type="application/ld+json" is:inline>
    {JSON.stringify({
      '@context': 'https://schema.org',
      '@type': 'Article',
      headline: data.title,
      datePublished: data.date.toISOString(),
      image: ogImage,
      author: data.author?.name
        ? { '@type': 'Person', name: data.author.name }
        : undefined,
    })}
  </script>
</BaseLayout>
